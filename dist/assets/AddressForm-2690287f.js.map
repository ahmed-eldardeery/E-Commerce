{"version":3,"file":"AddressForm-2690287f.js","sources":["../../src/components/CheckoutForm/FormInput.jsx","../../src/components/CheckoutForm/AddressForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { TextField, Grid } from \"@mui/material\";\nimport { useFormContext, Controller } from \"react-hook-form\";\nconst FormInput = ({ name, label }) => {\n  const { control } = useFormContext();\n  return (\n    <Grid item xs={12} sm={6}>\n      <Controller\n       \n        control={control}\n        name={name}\n        render={({ field }) => (\n          <TextField {...field} fullWidth label={label} required />\n        )}\n      />\n    </Grid>\n  );\n};\n\nexport default FormInput;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Typography\n} from \"@mui/material\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport commerce from \"../../lib/commerce\";\nimport FormInput from \"./FormInput\";\nconst AddressForm = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n\n  const methods = useForm({\n    defaultValues: {\n      firstName: '',\n      lastName: '',\n      address1: '',\n      email: '',\n      city: '',\n      zip: ''\n    }\n  })\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    region = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      { country, region }\n    );\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n  \n  if (checkoutToken) {\n    useEffect(() => {\n      fetchShippingCountries(checkoutToken.id);\n    }, []);\n    useEffect(() => {\n      if (shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n    useEffect(() => {\n      if (shippingSubdivision)\n        fetchShippingOptions(\n          checkoutToken.id,\n          shippingCountry,\n          shippingSubdivision\n        );\n    }, [shippingSubdivision]);\n  }\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping Address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={ methods.handleSubmit((data) =>\n            next({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput name=\"firstName\" label=\"First name\" />\n            <FormInput name=\"lastName\" label=\"Last name\" />\n            <FormInput name=\"address1\" label=\"Address\" />\n            <FormInput name=\"email\" label=\"Email\" />\n            <FormInput name=\"city\" label=\"City\" />\n            <FormInput name=\"zip\" label=\"ZIP / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel> Shipping Coutnry</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {Object.entries(shippingCountries)\n                  .map(([code, name]) => ({ id: code, label: name }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {Object.entries(shippingSubdivisions)\n                  .map(([code, name]) => ({ id: code, label: name }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {shippingOptions\n                  .map((sO) => ({\n                    id: sO.id,\n                    label: `${sO.description} - (${sO.price.formatted_with_symbol})`\n                  }))\n                  .map((item) => (\n                    <MenuItem key={item.id} value={item.id}>\n                      {item.label}\n                    </MenuItem>\n                  ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Link to=\"/E-Commerce/cart\" style={{ textDecoration: \"none\" }}>\n              <Button variant=\"outlined\" >Back to Cart</Button>\n            </Link>\n            <Button type=\"submit\" variant=\"contained\" >\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n"],"names":["FormInput","name","label","control","useFormContext","Grid","jsx","Controller","field","TextField","AddressForm","checkoutToken","next","shippingCountries","setShippingCountries","useState","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","useForm","fetchShippingCountries","checkoutTokenId","countries","commerce","fetchSubdivisions","countryCode","subdivisions","fetchShippingOptions","country","region","options","useEffect","jsxs","Fragment","Typography","FormProvider","data","InputLabel","Select","e","code","item","MenuItem","sO","Link","Button"],"mappings":"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"}