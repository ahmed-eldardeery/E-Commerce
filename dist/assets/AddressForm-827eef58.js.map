{"version":3,"file":"AddressForm-827eef58.js","sources":["../../src/components/CheckoutForm/FormInput.jsx","../../src/components/CheckoutForm/AddressForm.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { TextField, Grid } from \"@mui/material\";\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\nconst FormInput = ({ name, label }) => {\r\n  const { control } = useFormContext();\r\n  return (\r\n    <Grid item xs={12} sm={6}>\r\n      <Controller\r\n       \r\n        control={control}\r\n        name={name}\r\n        render={({ field }) => (\r\n          <TextField {...field} fullWidth label={label} required />\r\n        )}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Grid,\r\n  Typography\r\n} from \"@mui/material\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport commerce from \"../../lib/commerce\";\r\nimport FormInput from \"./FormInput\";\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState('');\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState('');\r\n\r\n  const methods = useForm({\r\n    defaultValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      address1: '',\r\n      email: '',\r\n      city: '',\r\n      zip: ''\r\n    }\r\n  })\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    region = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n  \r\n  if (checkoutToken) {\r\n    useEffect(() => {\r\n      fetchShippingCountries(checkoutToken.id);\r\n    }, []);\r\n    useEffect(() => {\r\n      if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n    useEffect(() => {\r\n      if (shippingSubdivision)\r\n        fetchShippingOptions(\r\n          checkoutToken.id,\r\n          shippingCountry,\r\n          shippingSubdivision\r\n        );\r\n    }, [shippingSubdivision]);\r\n  }\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form\r\n          onSubmit={ methods.handleSubmit((data) =>\r\n            next({\r\n              ...data,\r\n              shippingCountry,\r\n              shippingSubdivision,\r\n              shippingOption\r\n            })\r\n          )}\r\n        >\r\n          <Grid container spacing={3}>\r\n            <FormInput name=\"firstName\" label=\"First name\" />\r\n            <FormInput name=\"lastName\" label=\"Last name\" />\r\n            <FormInput name=\"address1\" label=\"Address\" />\r\n            <FormInput name=\"email\" label=\"Email\" />\r\n            <FormInput name=\"city\" label=\"City\" />\r\n            <FormInput name=\"zip\" label=\"ZIP / Postal code\" />\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel> Shipping Coutnry</InputLabel>\r\n              <Select\r\n                value={shippingCountry}\r\n                fullWidth\r\n                onChange={(e) => setShippingCountry(e.target.value)}\r\n              >\r\n                {Object.entries(shippingCountries)\r\n                  .map(([code, name]) => ({ id: code, label: name }))\r\n                  .map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.label}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Subdivision</InputLabel>\r\n              <Select\r\n                value={shippingSubdivision}\r\n                fullWidth\r\n                onChange={(e) => setShippingSubdivision(e.target.value)}\r\n              >\r\n                {Object.entries(shippingSubdivisions)\r\n                  .map(([code, name]) => ({ id: code, label: name }))\r\n                  .map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.label}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <InputLabel>Shipping Options</InputLabel>\r\n              <Select\r\n                value={shippingOption}\r\n                fullWidth\r\n                onChange={(e) => setShippingOption(e.target.value)}\r\n              >\r\n                {shippingOptions\r\n                  .map((sO) => ({\r\n                    id: sO.id,\r\n                    label: `${sO.description} - (${sO.price.formatted_with_symbol})`\r\n                  }))\r\n                  .map((item) => (\r\n                    <MenuItem key={item.id} value={item.id}>\r\n                      {item.label}\r\n                    </MenuItem>\r\n                  ))}\r\n              </Select>\r\n            </Grid>\r\n          </Grid>\r\n          <br />\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <Link to=\"/E-Commerce/cart\" style={{ textDecoration: \"none\" }}>\r\n              <Button variant=\"outlined\" >Back to Cart</Button>\r\n            </Link>\r\n            <Button type=\"submit\" variant=\"contained\" >\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n"],"names":["FormInput","name","label","control","useFormContext","Grid","jsx","Controller","field","TextField","AddressForm","checkoutToken","next","shippingCountries","setShippingCountries","useState","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubdivisions","shippingSubdivision","setShippingSubdivision","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","useForm","fetchShippingCountries","checkoutTokenId","countries","commerce","fetchSubdivisions","countryCode","subdivisions","fetchShippingOptions","country","region","options","useEffect","jsxs","Fragment","Typography","FormProvider","data","InputLabel","Select","e","code","item","MenuItem","sO","Link","Button"],"mappings":"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"}